"""
Django settings for New_project project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# 템플릿 위치 지정 # os.path.join(BASE_DIR) = web01을 말한다. ,
TEMPLATE_DIRS = [os.path.join(BASE_DIR), 'templates'], 


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'h8x@=0yiiq6*$+!x5(*_hfmx)+)(uvn09q4jxk5f1l+lfak-m('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 적절하게 지정 => 개발모드에는 자동으로 부여 
# 운영 모드인경우 서버의 IP나 도메인을 지정 
ALLOWED_HOSTS = []

# Application definition
# 프로젝트에 포함되는 어플리케이션을 등록 => 모듈명만등록해도 됨
# 설정 클래스를 찾을수 있게 모듈 경로까지 포함하여 등록하기를 추천 
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'board',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'New_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR), 'templates'], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'New_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
            # sqlite DB사용시
            #'ENGINE': 'django.db.backends.sqlite3',
            #'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

            #  mysql
            # 'ENGINE': 'django.db.backends.mysql',
            # 'NAME': 'DB명',
            # 'USER': '아이디명',
            # 'PASSWORD' : '암호',
            # 'HOST' : '127.0.0.1',
            # 'PORT' : '포토번호'

            # oracle
            'ENGINE': 'django.db.backends.oracle',
            'NAME': 'xe', #SID
            'USER': 'admin',
            'PASSWORD' : '1234',
            'HOST' : '192.168.99.100',
            'PORT' : '32764'

            # 'ENGINE': 'django.db.backends.sqlite3',
            # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'
# 한국 시간 TIME_ZONE = 'Asia/Seoul'
TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True
# 장고가 알아서 시간대를 조정 => 섬머타임 걸리니까 
# 한국은 아시아로 타임존을 설정해두고 => USE_TZ = False로 해두는게 좋음
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
# 추가
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]